S
IDENTIFIER INTEGER instanceof . CHARACTER STRING BOOLEAN NULL = || && == != < > <= >= + - * / % ( ) this super new class void [ ] ! byte short char int boolean { } final if else for ; while return public protected abstract static final native package import implements extends , BOF EOF interface
S -> BOF CompilationUnit EOF
Identifier -> IDENTIFIER
QualifiedIdentifier -> Identifier ZOMDotIdentifier
ZOMDotIdentifier -> DotIdentifier ZOMDotIdentifier
ZOMDotIdentifier ->
DotIdentifier -> . Identifier
Literal -> INTEGER
Literal -> CHARACTER
Literal -> STRING
Literal -> BOOLEAN
Literal -> NULL
Expression -> Expression1 ZOOAssignmentOperatorExpression1
ZOOAssignmentOperatorExpression1 ->
ZOOAssignmentOperatorExpression1 -> AssignmentOperatorExpression1
AssignmentOperatorExpression1 -> AssignmentOperator Expression1
AssignmentOperator -> =
Type -> Identifier ZOMDotIdentifier BracketsOpt
Type -> BasicType
StatementExpression -> Expression
Expression1 -> Expression2
Expression2 -> Expression3 ZOMModifiedExpression2Rest
ZOMModifiedExpression2Rest ->
ZOMModifiedExpression2Rest -> ModifiedExpression2Rest ZOMModifiedExpression2Rest
ModifiedExpression2Rest -> InfixOp Expression3
ModifiedExpression2Rest -> instanceof Type
InfixOp -> ||
InfixOp -> &&
InfixOp -> ==
InfixOp -> !=
InfixOp -> <
InfixOp -> >
InfixOp -> <=
InfixOp -> >=
InfixOp -> +
InfixOp -> -
InfixOp -> *
InfixOp -> /
InfixOp -> %
Expression3 -> PrefixOp Expression3
Expression3 -> ( Expression ) Expression3
Expression3 -> ( BasicType ) Expression3
Expression3 -> Primary ZOMSelector
Expression3 -> PrimaryWithZOMSelector
ZOMSelector ->
ZOMSelector -> Selector ZOMSelector
Primary -> ( Expression )
Primary -> this ZOOArguments
ZOOArguments ->
ZOOArguments -> Arguments
Primary -> super Arguments
Primary -> super DotIdentifier ZOOArguments
Primary -> Literal
PrimaryWithZOMSelector -> new Creator ZOMSelector
PrimaryWithZOMSelector -> new CreatorWithZOMSelector
PrimaryWithZOMSelector -> Identifier ZOMOrDotIdentifierIdentifierSuffixSelector
ZOMOrDotIdentifierIdentifierSuffixSelector ->
ZOMOrDotIdentifierIdentifierSuffixSelector -> OrDotIdentifierIdentifierSuffixSelector ZOMOrDotIdentifierIdentifierSuffixSelector
OrDotIdentifierIdentifierSuffixSelector -> DotIdentifier
OrDotIdentifierIdentifierSuffixSelector -> IdentifierSuffixSubset
OrDotIdentifierIdentifierSuffixSelector -> SelectorSubset
OrDotIdentifierIdentifierSuffixSelector -> CommonRulesIdentifierSuffixSelector
OrDotIdentifierIdentifierSuffixSelector -> SquareBrackets
CommonRulesIdentifierSuffixSelector -> . this
CommonRulesIdentifierSuffixSelector -> . new InnerCreator
CommonRulesIdentifierSuffixSelector -> [ Expression ]
CommonRulesIdentifierSuffixSelector -> . super Arguments
IdentifierSuffixSubset -> Arguments
PrefixOp -> !
Selector -> [ Expression ]
Selector -> SelectorWithoutSquareBracketExpression
SelectorWithoutSquareBracketExpression -> . this
SelectorWithoutSquareBracketExpression -> . new InnerCreator
SelectorWithoutSquareBracketExpression -> DotIdentifier
SelectorWithoutSquareBracketExpression -> SelectorSubset
SelectorSubset -> . super DotIdentifier
BasicType -> byte
BasicType -> short
BasicType -> char
BasicType -> int
BasicType -> boolean
Arguments -> ( ZOOExpressionZOMCommaExpression )
ZOOExpressionZOMCommaExpression ->
ZOOExpressionZOMCommaExpression -> ExpressionZOMCommaExpression
ExpressionZOMCommaExpression -> Expression ZOMCommaExpression
ZOMCommaExpression ->
ZOMCommaExpression -> CommaExpression ZOMCommaExpression
CommaExpression -> , Expression
BracketsOpt -> ZOMSquareBrackets
ZOMSquareBrackets ->
ZOMSquareBrackets -> SquareBrackets ZOMSquareBrackets
SquareBrackets -> [ ]
CreatorWithZOMSelector -> QualifiedIdentifier ArrayCreatorRestWithZOMSelector
Creator -> QualifiedIdentifier ClassCreatorRest
InnerCreator -> Identifier ClassCreatorRest
ArrayCreatorRestWithZOMSelector -> [ Expression ] ZOMOrSquareBracketExpressionSquareBracketsSelector
ZOMOrSquareBracketExpressionSquareBracketsSelector ->
ZOMOrSquareBracketExpressionSquareBracketsSelector -> OrSquareBracketExpressionSquareBracketsSelector ZOMOrSquareBracketExpressionSquareBracketsSelector
OrSquareBracketExpressionSquareBracketsSelector -> SquareBracketExpression
OrSquareBracketExpressionSquareBracketsSelector -> SquareBrackets
OrSquareBracketExpressionSquareBracketsSelector -> SelectorWithoutSquareBracketExpression
ZOMSquareBracketExpression ->
ZOMSquareBracketExpression -> SquareBracketExpression ZOMSquareBracketExpression
SquareBracketExpression -> [ Expression ]
ClassCreatorRest -> Arguments [ ClassBody ]
VariableInitializer -> Expression
ParExpression -> ( Expression )
Block -> { BlockStatements }
BlockStatements -> ZOMBlockStatement
ZOMBlockStatement ->
ZOMBlockStatement -> BlockStatement ZOMBlockStatement
BlockStatement -> LocalVariableDeclarationStatement
BlockStatement -> ClassOrInterfaceDeclaration
BlockStatement -> Statement
LocalVariableDeclarationStatement -> final Type VariableDeclarator ;
LocalVariableDeclarationStatement -> PrimaryWithZOMSelector VariableDeclarator ;
LocalVariableDeclarationStatement -> BasicType VariableDeclarator ;
Statement -> StatementWithoutTrailingSubstatement
Statement -> IfThenStatement
Statement -> IfThenElseStatement
Statement -> WhileStatement
Statement -> ForStatement
StatementWithoutTrailingSubstatement -> Block
StatementWithoutTrailingSubstatement -> EmptyStatement
StatementWithoutTrailingSubstatement -> ExpressionStatement
StatementWithoutTrailingSubstatement -> ReturnStatement
StatementNoShortIf -> StatementWithoutTrailingSubstatement
StatementNoShortIf -> IfThenElseStatementNoShortIf
StatementNoShortIf -> WhileStatementNoShortIf
StatementNoShortIf -> ForStatementNoShortIf
WhileStatement -> while ParExpression Statement
WhileStatementNoShortIf -> while ParExpression StatementNoShortIf
ForStatement -> for ( ForInitOpt ; ZOOExpression ; ForUpdateOpt ) Statement
ForStatementNoShortIf -> for ( ForInitOpt ; ZOOExpression ; ForUpdateOpt ) StatementNoShortIf
EmptyStatement -> ;
ReturnStatement -> return ZOOExpression ;
IfThenStatement -> if ParExpression Statement
IfThenElseStatement -> if ParExpression StatementNoShortIf else Statement
IfThenElseStatementNoShortIf -> if ParExpression StatementNoShortIf else StatementNoShortIf
ZOOExpression ->
ZOOExpression -> Expression
ExpressionStatement -> StatementExpression ;
ForInitOpt -> ZOOForInit
ZOOForInit ->
ZOOForInit -> ForInit
ForInit -> final Type VariableDeclarator
ForInit -> Type VariableDeclarator
ForUpdateOpt -> ZOOForUpdate
ZOOForUpdate ->
ZOOForUpdate -> ForUpdate
ForUpdate -> StatementExpression
ModifiersOpt -> ZOMModifier
ZOMModifier ->
ZOMModifier -> Modifier ZOMModifier
OOMModifier -> Modifier
OOMModifier -> Modifier OOMModifier
Modifier -> public
Modifier -> protected
Modifier -> abstract
Modifier -> static
Modifier -> final
Modifier -> native
VariableDeclarator -> Identifier VariableDeclaratorRest
VariableDeclaratorRest -> BracketsOpt ZOOEqualsVariableInitializer
ZOOEqualsVariableInitializer ->
ZOOEqualsVariableInitializer -> EqualsVariableInitializer
EqualsVariableInitializer -> = VariableInitializer
VariableDeclaratorId -> Identifier BracketsOpt
CompilationUnit -> ZOOPackageQualifiedIdentifierSemicolon ZOMImportDeclaration ZOOTypeDeclaration
ZOOPackageQualifiedIdentifierSemicolon ->
ZOOPackageQualifiedIdentifierSemicolon -> PackageQualifiedIdentifierSemicolon
PackageQualifiedIdentifierSemicolon -> package QualifiedIdentifier
ZOMImportDeclaration ->
ZOMImportDeclaration -> ImportDeclaration ZOMImportDeclaration
ImportDeclaration -> import Identifier ZOMDotStarOrIdentifier ;
ZOMDotStarOrIdentifier ->
ZOMDotStarOrIdentifier -> DotStarOrIdentifier ZOMDotStarOrIdentifier
DotStarOrIdentifier -> DotStar
DotStarOrIdentifier -> DotIdentifier
DotStar -> . *
ZOOTypeDeclaration ->
ZOOTypeDeclaration -> TypeDeclaration
TypeDeclaration -> ClassOrInterfaceDeclaration
TypeDeclaration -> ;
ClassOrInterfaceDeclaration -> ModifiersOpt ClassDeclaration
ClassOrInterfaceDeclaration -> OOMModifier InterfaceDeclaration
ClassDeclaration -> class Identifier ZOOExtendsType  ZOOImplementsTypeList ClassBody
ZOOExtendsType ->
ZOOExtendsType -> ExtendsType
ExtendsType -> extends Type
ZOOImplementsTypeList ->
ZOOImplementsTypeList -> ImplementsTypeList
ImplementsTypeList -> implements TypeList
InterfaceDeclaration -> interface Identifier ZOOExtendsTypeList InterfaceBody
ZOOExtendsTypeList ->
ZOOExtendsTypeList -> ExtendsTypeList
ExtendsTypeList -> extends TypeList
TypeList -> Type ZOMCommaType
ZOMCommaType ->
ZOMCommaType -> CommaType ZOMCommaType
CommaType -> , Type
ClassBody -> { ZOMClassBodyDeclaration }
ZOMClassBodyDeclaration ->
ZOMClassBodyDeclaration -> ClassBodyDeclaration ZOMClassBodyDeclaration
InterfaceBody -> { ZOMInterfaceBodyDeclaration }
ZOMInterfaceBodyDeclaration ->
ZOMInterfaceBodyDeclaration -> InterfaceBodyDeclaration ZOMInterfaceBodyDeclaration
ClassBodyDeclaration -> ;
ClassBodyDeclaration -> ZOOStatic Block
ZOOStatic ->
ZOOStatic -> static
ClassBodyDeclaration -> ModifiersOpt MemberDecl
MemberDecl -> MethodOrFieldDecl
MemberDecl -> void Identifier MethodDeclaratorRest
MemberDecl -> Identifier ConstructorDeclaratorRest
MethodOrFieldDecl -> Type Identifier MethodOrFieldRest
MethodOrFieldRest -> VariableDeclaratorRest ;
MethodOrFieldRest -> MethodDeclaratorRest
InterfaceBodyDeclaration -> ;
InterfaceBodyDeclaration -> ModifiersOpt InterfaceMemberDecl
InterfaceMemberDecl -> InterfaceMethodOrFieldDecl
InterfaceMemberDecl -> void Identifier VoidInterfaceMethodDeclaratorRest
InterfaceMethodOrFieldDecl -> Type Identifier InterfaceMethodOrFieldRest
InterfaceMethodOrFieldRest -> InterfaceMethodDeclaratorRest
MethodDeclaratorRest -> FormalParameters BracketsOpt MethodBody
MethodDeclaratorRest -> FormalParameters BracketsOpt ;
InterfaceMethodDeclaratorRest -> FormalParameters BracketsOpt ;
VoidInterfaceMethodDeclaratorRest -> FormalParameters ;
ConstructorDeclaratorRest -> FormalParameters MethodBody
FormalParameters -> ( ZOOFormalParameterZOMCommaFormalParameter )
ZOOFormalParameterZOMCommaFormalParameter ->
ZOOFormalParameterZOMCommaFormalParameter -> FormalParameterZOMCommaFormalParameter
FormalParameterZOMCommaFormalParameter -> FormalParameter ZOMCommaFormalParameter
ZOMCommaFormalParameter ->
ZOMCommaFormalParameter -> CommaFormalParameter ZOMCommaFormalParameter
CommaFormalParameter -> , FormalParameter
FormalParameter -> final Type VariableDeclaratorId
FormalParameter -> Type VariableDeclaratorId
MethodBody -> Block